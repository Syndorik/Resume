Time to compute: 47582.656 seconds
RandomizedSearchCV(cv='warn', error_score='raise-deprecating',
                   estimator=ClaimClassifier(activation_function='relu',
                                             architecture=(64, 64, 64),
                                             batch_size=8, epochs=10,
                                             l1_weight=0, l2_weight=0,
                                             learning_rate=0.001,
                                             loss=<tensorflow.python.keras.losses.BinaryCrossentropy object at 0x109e31390>,
                                             metrics=[<tensorflow.python.keras.losses.BinaryCrossentropy object at 0x...
                                                      <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>,
                                                      <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>,
                                                      <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>,
                                                      <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>]},
                   pre_dispatch='2*n_jobs', random_state=None, refit=True,
                   return_train_score=False, scoring=None, verbose=0)
Best hyperparameter combination found
{'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 1.0, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 128, 'architecture': (512, 4, 1, 4), 'activation_function': 'sigmoid'}

Grid scores on development set:

0.642 (+/-0.040) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.06217652402211632, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 16, 'architecture': (1024, 64, 1, 4), 'activation_function': 'sigmoid'}
0.623 (+/-0.027) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.020468075714350484, 'l1_weight': 1.0, 'epochs': 50, 'batch_size': 32, 'architecture': (64, 32, 16, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.650 (+/-0.020) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 30, 'batch_size': 64, 'architecture': (1, 1024, 4, 2), 'activation_function': 'sigmoid'}
0.662 (+/-0.007) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.18887560283756186, 'l1_weight': 1.0, 'epochs': 20, 'batch_size': 16, 'architecture': (8, 128, 16, 8), 'activation_function': 'sigmoid'}
0.657 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 16, 'architecture': (128, 512, 16, 8), 'activation_function': 'relu'}
0.647 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 10, 'batch_size': 16, 'architecture': (512, 16, 4, 1), 'activation_function': 'tanh'}
0.634 (+/-0.045) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.03567399334725241, 'epochs': 10, 'batch_size': 32, 'architecture': (32, 512, 512, 4), 'activation_function': 'sigmoid'}
0.633 (+/-0.027) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.573753420737433, 'l1_weight': 0.06217652402211632, 'epochs': 50, 'batch_size': 128, 'architecture': (1024, 64, 2, 4), 'activation_function': 'sigmoid'}
0.674 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.32919298780790573, 'epochs': 30, 'batch_size': 16, 'architecture': (1024, 2, 512, 32), 'activation_function': 'sigmoid'}
0.665 (+/-0.040) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.573753420737433, 'l1_weight': 0.573753420737433, 'epochs': 20, 'batch_size': 16, 'architecture': (128, 64, 1, 512), 'activation_function': 'relu'}
0.639 (+/-0.050) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.03567399334725241, 'epochs': 40, 'batch_size': 32, 'architecture': (128, 8, 2, 8), 'activation_function': 'sigmoid'}
0.642 (+/-0.034) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.06217652402211632, 'epochs': 20, 'batch_size': 32, 'architecture': (8, 64, 16, 1), 'activation_function': 'sigmoid'}
0.652 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 32, 'architecture': (1, 64, 1024, 16), 'activation_function': 'relu'}
0.632 (+/-0.049) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 128, 'architecture': (32, 4, 128), 'activation_function': 'relu'}
0.669 (+/-0.029) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 32, 'architecture': (4, 512, 512, 1024), 'activation_function': 'relu'}
0.640 (+/-0.067) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.03567399334725241, 'l1_weight': 1.0, 'epochs': 30, 'batch_size': 64, 'architecture': (32, 4, 32, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.660 (+/-0.060) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 128, 'architecture': (128, 1024, 32, 2), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.664 (+/-0.013) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.020468075714350484, 'epochs': 40, 'batch_size': 128, 'architecture': (2, 32, 2, 1024), 'activation_function': 'sigmoid'}
0.654 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 128, 'architecture': (512, 64, 128), 'activation_function': 'tanh'}
0.678 (+/-0.015) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.10836802322189586, 'epochs': 40, 'batch_size': 32, 'architecture': (16, 128, 32, 512), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.666 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.01174362845702136, 'epochs': 50, 'batch_size': 32, 'architecture': (128, 64, 1, 64), 'activation_function': 'tanh'}
0.649 (+/-0.029) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.006737946999085467, 'epochs': 30, 'batch_size': 16, 'architecture': (8, 8, 512, 2), 'activation_function': 'sigmoid'}
0.654 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 64, 'architecture': (64, 2, 512, 4), 'activation_function': 'sigmoid'}
0.645 (+/-0.052) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 64, 'architecture': (128, 8, 128, 2), 'activation_function': 'relu'}
0.673 (+/-0.037) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 30, 'batch_size': 32, 'architecture': (1, 1, 16, 512), 'activation_function': 'tanh'}
0.663 (+/-0.008) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.32919298780790573, 'epochs': 20, 'batch_size': 64, 'architecture': (4, 1, 128, 128), 'activation_function': 'tanh'}
0.660 (+/-0.045) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 1.0, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 128, 'architecture': (4, 32, 1024, 16), 'activation_function': 'sigmoid'}
0.656 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 16, 'architecture': (64, 64, 16, 2), 'activation_function': 'tanh'}
0.635 (+/-0.042) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 64, 'architecture': (128, 128, 2, 32), 'activation_function': 'sigmoid'}
0.655 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.006737946999085467, 'epochs': 20, 'batch_size': 32, 'architecture': (1, 64, 1, 1024), 'activation_function': 'sigmoid'}
0.635 (+/-0.044) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.06217652402211632, 'epochs': 20, 'batch_size': 16, 'architecture': (16, 4, 1, 4), 'activation_function': 'relu'}
0.644 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 64, 'architecture': (64, 64, 8), 'activation_function': 'tanh'}
0.668 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.573753420737433, 'epochs': 50, 'batch_size': 128, 'architecture': (16, 8, 1, 16), 'activation_function': 'sigmoid'}
0.672 (+/-0.026) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 30, 'batch_size': 16, 'architecture': (2, 64, 32, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.668 (+/-0.023) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 1.0, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 128, 'architecture': (2, 2, 1024, 1), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.640 (+/-0.007) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 1.0, 'l1_weight': 0.18887560283756186, 'epochs': 50, 'batch_size': 128, 'architecture': (128, 512, 1, 1), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.645 (+/-0.042) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.573753420737433, 'epochs': 20, 'batch_size': 16, 'architecture': (1, 1024, 512, 8), 'activation_function': 'sigmoid'}
0.651 (+/-0.077) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 32, 'architecture': (8, 512, 2, 4), 'activation_function': 'relu'}
0.668 (+/-0.025) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.573753420737433, 'epochs': 20, 'batch_size': 16, 'architecture': (32, 32, 32, 16), 'activation_function': 'tanh'}
0.647 (+/-0.069) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.03567399334725241, 'epochs': 40, 'batch_size': 128, 'architecture': (32, 32, 2, 2), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.649 (+/-0.008) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.18887560283756186, 'epochs': 10, 'batch_size': 16, 'architecture': (8, 8, 512, 2), 'activation_function': 'sigmoid'}
0.659 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.03567399334725241, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 32, 'architecture': (64, 16, 1024, 2), 'activation_function': 'sigmoid'}
0.650 (+/-0.023) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 16, 'architecture': (1024, 128, 2, 8), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.650 (+/-0.054) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.573753420737433, 'l1_weight': 1.0, 'epochs': 10, 'batch_size': 32, 'architecture': (64, 512, 512, 32), 'activation_function': 'sigmoid'}
0.668 (+/-0.065) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 1.0, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 64, 'architecture': (4, 4, 128, 128), 'activation_function': 'relu'}
0.676 (+/-0.016) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.10836802322189586, 'epochs': 30, 'batch_size': 32, 'architecture': (16, 32, 8, 1), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.629 (+/-0.046) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.020468075714350484, 'epochs': 50, 'batch_size': 128, 'architecture': (64, 4, 4, 16), 'activation_function': 'tanh'}
0.653 (+/-0.040) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.06217652402211632, 'epochs': 40, 'batch_size': 128, 'architecture': (64, 16, 8, 16), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.665 (+/-0.045) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.573753420737433, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 128, 'architecture': (1024, 16, 1024, 4), 'activation_function': 'sigmoid'}
0.640 (+/-0.047) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.18887560283756186, 'epochs': 40, 'batch_size': 32, 'architecture': (512, 8, 16, 8), 'activation_function': 'relu'}
0.655 (+/-0.008) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 16, 'architecture': (16, 128, 16, 2), 'activation_function': 'tanh'}
0.681 (+/-0.007) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.06217652402211632, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 128, 'architecture': (128, 16, 8, 1), 'activation_function': 'sigmoid'}
0.651 (+/-0.044) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.06217652402211632, 'epochs': 50, 'batch_size': 32, 'architecture': (2, 4, 128, 32), 'activation_function': 'tanh'}
0.659 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 16, 'architecture': (1, 1, 512, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.654 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.18887560283756186, 'epochs': 30, 'batch_size': 16, 'architecture': (2, 1, 32, 64), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.661 (+/-0.039) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 32, 'architecture': (16, 16, 32, 16), 'activation_function': 'relu'}
0.634 (+/-0.075) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.020468075714350484, 'epochs': 40, 'batch_size': 32, 'architecture': (1, 32, 512, 1024), 'activation_function': 'relu'}
0.667 (+/-0.091) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.32919298780790573, 'epochs': 20, 'batch_size': 16, 'architecture': (4, 32, 64, 8), 'activation_function': 'sigmoid'}
0.637 (+/-0.061) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.573753420737433, 'l1_weight': 0.06217652402211632, 'epochs': 40, 'batch_size': 32, 'architecture': (2, 4, 8, 4), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.669 (+/-0.040) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.020468075714350484, 'epochs': 40, 'batch_size': 64, 'architecture': (4, 8, 8, 512), 'activation_function': 'tanh'}
0.641 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 16, 'architecture': (8, 2, 512, 32), 'activation_function': 'sigmoid'}
0.640 (+/-0.070) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 64, 'architecture': (128, 32, 128, 1024), 'activation_function': 'relu'}
0.656 (+/-0.040) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.03567399334725241, 'epochs': 30, 'batch_size': 16, 'architecture': (2, 32, 1024, 512), 'activation_function': 'relu'}
0.653 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.03567399334725241, 'epochs': 30, 'batch_size': 64, 'architecture': (32, 4, 2, 2), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.630 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 1.0, 'epochs': 10, 'batch_size': 16, 'architecture': (32, 1, 32, 32), 'activation_function': 'sigmoid'}
0.638 (+/-0.024) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.006737946999085467, 'epochs': 30, 'batch_size': 32, 'architecture': (512, 8, 512, 512), 'activation_function': 'relu'}
0.660 (+/-0.024) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.32919298780790573, 'epochs': 10, 'batch_size': 32, 'architecture': (128, 1024, 64), 'activation_function': 'relu'}
0.643 (+/-0.061) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.03567399334725241, 'l1_weight': 1.0, 'epochs': 50, 'batch_size': 128, 'architecture': (512, 16, 4, 32), 'activation_function': 'relu'}
0.637 (+/-0.054) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 32, 'architecture': (16, 1024, 1024, 64), 'activation_function': 'sigmoid'}
0.653 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.006737946999085467, 'epochs': 40, 'batch_size': 32, 'architecture': (128, 16, 4, 16), 'activation_function': 'tanh'}
0.672 (+/-0.009) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.573753420737433, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 32, 'architecture': (32, 4, 1, 2), 'activation_function': 'tanh'}
0.660 (+/-0.049) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.10836802322189586, 'epochs': 20, 'batch_size': 32, 'architecture': (2, 4, 32, 8), 'activation_function': 'sigmoid'}
0.636 (+/-0.012) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.573753420737433, 'epochs': 30, 'batch_size': 32, 'architecture': (8, 128, 32, 64), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.674 (+/-0.038) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.006737946999085467, 'epochs': 30, 'batch_size': 64, 'architecture': (4, 1024, 2, 8), 'activation_function': 'tanh'}
0.653 (+/-0.037) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 16, 'architecture': (2, 16, 2, 512), 'activation_function': 'sigmoid'}
0.644 (+/-0.014) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.573753420737433, 'epochs': 20, 'batch_size': 64, 'architecture': (512, 16, 1024, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.634 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.01174362845702136, 'epochs': 20, 'batch_size': 64, 'architecture': (4, 1, 4, 4), 'activation_function': 'tanh'}
0.667 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.18887560283756186, 'epochs': 30, 'batch_size': 64, 'architecture': (8, 4, 1024, 512), 'activation_function': 'tanh'}
0.651 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.573753420737433, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 128, 'architecture': (4, 4, 512, 1024), 'activation_function': 'relu'}
0.661 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.18887560283756186, 'epochs': 30, 'batch_size': 128, 'architecture': (1, 512, 1024), 'activation_function': 'sigmoid'}
0.673 (+/-0.039) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.020468075714350484, 'epochs': 10, 'batch_size': 128, 'architecture': (32, 1, 16, 512), 'activation_function': 'tanh'}
0.683 (+/-0.061) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 16, 'architecture': (4, 1024, 512, 64), 'activation_function': 'sigmoid'}
0.669 (+/-0.062) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 64, 'architecture': (2, 1024, 64, 8), 'activation_function': 'tanh'}
0.654 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.32919298780790573, 'epochs': 10, 'batch_size': 32, 'architecture': (64, 64, 8, 4), 'activation_function': 'sigmoid'}
0.659 (+/-0.016) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.06217652402211632, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 32, 'architecture': (512, 1, 4, 16), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.683 (+/-0.059) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 64, 'architecture': (512, 1024, 128, 128), 'activation_function': 'relu'}
0.674 (+/-0.005) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.573753420737433, 'l1_weight': 1.0, 'epochs': 10, 'batch_size': 128, 'architecture': (128, 1, 1, 512), 'activation_function': 'relu'}
0.621 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.18887560283756186, 'epochs': 30, 'batch_size': 16, 'architecture': (4, 64, 512, 64), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.668 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.18887560283756186, 'epochs': 40, 'batch_size': 64, 'architecture': (1, 2, 128, 128), 'activation_function': 'tanh'}
0.667 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.01174362845702136, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 32, 'architecture': (2, 8, 32, 1), 'activation_function': 'tanh'}
0.672 (+/-0.024) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 128, 'architecture': (1024, 2, 32), 'activation_function': 'sigmoid'}
0.647 (+/-0.013) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.006737946999085467, 'l1_weight': 1.0, 'epochs': 30, 'batch_size': 32, 'architecture': (2, 4, 32, 16), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.671 (+/-0.018) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.006737946999085467, 'epochs': 10, 'batch_size': 128, 'architecture': (4, 1024, 8, 8), 'activation_function': 'sigmoid'}
0.656 (+/-0.006) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 1.0, 'l1_weight': 0.06217652402211632, 'epochs': 40, 'batch_size': 16, 'architecture': (512, 32, 8), 'activation_function': 'tanh'}
0.653 (+/-0.072) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.020468075714350484, 'epochs': 40, 'batch_size': 64, 'architecture': (1024, 1, 32, 16), 'activation_function': 'tanh'}
0.622 (+/-0.047) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.32919298780790573, 'epochs': 30, 'batch_size': 128, 'architecture': (16, 128, 32, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.655 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.06217652402211632, 'epochs': 30, 'batch_size': 64, 'architecture': (2, 16, 64, 16), 'activation_function': 'tanh'}
0.666 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 128, 'architecture': (2, 64, 512, 512), 'activation_function': 'relu'}
0.667 (+/-0.067) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.006737946999085467, 'epochs': 10, 'batch_size': 32, 'architecture': (32, 64, 128, 64), 'activation_function': 'tanh'}
0.672 (+/-0.054) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 128, 'architecture': (2, 4, 2, 512), 'activation_function': 'tanh'}
0.641 (+/-0.029) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.03567399334725241, 'epochs': 10, 'batch_size': 16, 'architecture': (32, 512, 1, 2), 'activation_function': 'tanh'}
0.659 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 128, 'architecture': (4, 2, 1, 64), 'activation_function': 'sigmoid'}
0.684 (+/-0.042) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.573753420737433, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 128, 'architecture': (1, 2, 2, 16), 'activation_function': 'tanh'}
0.648 (+/-0.079) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.01174362845702136, 'epochs': 50, 'batch_size': 16, 'architecture': (8, 2, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.686 (+/-0.037) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 64, 'architecture': (128, 128, 512, 4), 'activation_function': 'relu'}
0.653 (+/-0.025) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.18887560283756186, 'epochs': 30, 'batch_size': 16, 'architecture': (1024, 128, 8, 2), 'activation_function': 'relu'}
0.645 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.10836802322189586, 'epochs': 30, 'batch_size': 32, 'architecture': (2, 128, 1, 1), 'activation_function': 'tanh'}
0.675 (+/-0.038) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.573753420737433, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 32, 'architecture': (16, 32, 32, 64), 'activation_function': 'relu'}
0.669 (+/-0.065) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.573753420737433, 'l1_weight': 0.573753420737433, 'epochs': 20, 'batch_size': 64, 'architecture': (4, 32, 2, 4), 'activation_function': 'sigmoid'}
0.640 (+/-0.065) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.03567399334725241, 'l1_weight': 1.0, 'epochs': 50, 'batch_size': 64, 'architecture': (512, 2, 2, 8), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.647 (+/-0.026) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.06217652402211632, 'epochs': 50, 'batch_size': 32, 'architecture': (1, 32, 32, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.644 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 16, 'architecture': (1, 64, 4, 64), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.643 (+/-0.046) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.020468075714350484, 'epochs': 40, 'batch_size': 16, 'architecture': (8, 4, 16), 'activation_function': 'sigmoid'}
0.636 (+/-0.018) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 1.0, 'l1_weight': 0.573753420737433, 'epochs': 40, 'batch_size': 16, 'architecture': (128, 32, 1024), 'activation_function': 'sigmoid'}
0.651 (+/-0.021) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.18887560283756186, 'l1_weight': 1.0, 'epochs': 50, 'batch_size': 16, 'architecture': (1, 1, 128, 64), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.651 (+/-0.021) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 128, 'architecture': (1, 128, 8, 1024), 'activation_function': 'tanh'}
0.677 (+/-0.008) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (8, 512, 64, 1024), 'activation_function': 'sigmoid'}
0.653 (+/-0.056) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (64, 1, 64, 8), 'activation_function': 'tanh'}
0.640 (+/-0.048) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.020468075714350484, 'epochs': 50, 'batch_size': 16, 'architecture': (2, 128, 1024, 128), 'activation_function': 'relu'}
0.639 (+/-0.020) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.573753420737433, 'epochs': 30, 'batch_size': 128, 'architecture': (2, 64, 1, 8), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.675 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.573753420737433, 'epochs': 30, 'batch_size': 32, 'architecture': (128, 32, 32, 8), 'activation_function': 'relu'}
0.660 (+/-0.080) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 32, 'architecture': (64, 64, 128, 64), 'activation_function': 'relu'}
0.650 (+/-0.011) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 32, 'architecture': (64, 1, 1024, 8), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.638 (+/-0.019) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.06217652402211632, 'epochs': 20, 'batch_size': 128, 'architecture': (4, 2, 512, 16), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.669 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.573753420737433, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 64, 'architecture': (64, 32, 32, 8), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.650 (+/-0.030) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 64, 'architecture': (4, 4, 2, 1024), 'activation_function': 'tanh'}
0.666 (+/-0.007) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 16, 'architecture': (32, 512, 512, 8), 'activation_function': 'sigmoid'}
0.623 (+/-0.023) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.32919298780790573, 'epochs': 10, 'batch_size': 32, 'architecture': (32, 128, 1, 512), 'activation_function': 'tanh'}
0.664 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.01174362845702136, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 32, 'architecture': (16, 1024, 16, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.664 (+/-0.053) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.573753420737433, 'epochs': 10, 'batch_size': 32, 'architecture': (64, 128, 128, 128), 'activation_function': 'relu'}
0.655 (+/-0.006) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.020468075714350484, 'epochs': 20, 'batch_size': 16, 'architecture': (8, 1024, 512, 512), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.629 (+/-0.007) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 50, 'batch_size': 64, 'architecture': (1, 8, 1024, 8), 'activation_function': 'tanh'}
0.664 (+/-0.025) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.573753420737433, 'l1_weight': 0.01174362845702136, 'epochs': 20, 'batch_size': 32, 'architecture': (2, 64, 128, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.662 (+/-0.023) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.01174362845702136, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 64, 'architecture': (8, 2, 8, 128), 'activation_function': 'sigmoid'}
0.660 (+/-0.002) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.32919298780790573, 'epochs': 30, 'batch_size': 32, 'architecture': (4, 1024, 16, 4), 'activation_function': 'sigmoid'}
0.672 (+/-0.019) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 128, 'architecture': (512, 16, 2, 64), 'activation_function': 'relu'}
0.657 (+/-0.023) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.01174362845702136, 'epochs': 20, 'batch_size': 64, 'architecture': (32, 2, 16, 512), 'activation_function': 'sigmoid'}
0.655 (+/-0.037) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.10836802322189586, 'epochs': 20, 'batch_size': 16, 'architecture': (1024, 2, 128, 512), 'activation_function': 'tanh'}
0.653 (+/-0.056) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 1.0, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 32, 'architecture': (4, 2, 128, 64), 'activation_function': 'tanh'}
0.641 (+/-0.034) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 16, 'architecture': (1024, 1024, 1024, 64), 'activation_function': 'relu'}
0.660 (+/-0.011) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (8, 512, 16, 1024), 'activation_function': 'relu'}
0.649 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.020468075714350484, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 16, 'architecture': (512, 4, 32, 16), 'activation_function': 'tanh'}
0.641 (+/-0.038) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 16, 'architecture': (2, 128, 4, 512), 'activation_function': 'tanh'}
0.655 (+/-0.055) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.18887560283756186, 'epochs': 50, 'batch_size': 128, 'architecture': (2, 8, 8, 1), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.656 (+/-0.058) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.01174362845702136, 'epochs': 10, 'batch_size': 64, 'architecture': (1024, 2, 4, 1), 'activation_function': 'tanh'}
0.690 (+/-0.025) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 32, 'architecture': (8, 128, 2, 1024), 'activation_function': 'tanh'}
0.659 (+/-0.027) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.020468075714350484, 'epochs': 20, 'batch_size': 64, 'architecture': (32, 1, 32, 32), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.685 (+/-0.063) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.06217652402211632, 'epochs': 20, 'batch_size': 32, 'architecture': (2, 8, 8, 512), 'activation_function': 'tanh'}
0.652 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.32919298780790573, 'epochs': 40, 'batch_size': 64, 'architecture': (16, 2, 1, 64), 'activation_function': 'sigmoid'}
0.645 (+/-0.025) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.03567399334725241, 'epochs': 20, 'batch_size': 128, 'architecture': (8, 64, 128, 2), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.664 (+/-0.020) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.10836802322189586, 'epochs': 20, 'batch_size': 32, 'architecture': (4, 1, 2, 16), 'activation_function': 'relu'}
0.650 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 64, 'architecture': (512, 32, 8, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.659 (+/-0.048) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.18887560283756186, 'epochs': 10, 'batch_size': 16, 'architecture': (4, 8, 1, 16), 'activation_function': 'relu'}
0.623 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.020468075714350484, 'epochs': 50, 'batch_size': 16, 'architecture': (4, 128, 16, 32), 'activation_function': 'sigmoid'}
0.669 (+/-0.006) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 10, 'batch_size': 16, 'architecture': (128, 16, 1024, 1), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.656 (+/-0.018) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.573753420737433, 'epochs': 10, 'batch_size': 32, 'architecture': (1024, 2, 512, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.658 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.020468075714350484, 'epochs': 10, 'batch_size': 64, 'architecture': (4, 512, 4, 2), 'activation_function': 'relu'}
0.654 (+/-0.011) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 128, 'architecture': (16, 1, 2, 512), 'activation_function': 'sigmoid'}
0.663 (+/-0.051) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 128, 'architecture': (1024, 32, 8, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.638 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.006737946999085467, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 16, 'architecture': (512, 1, 1, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.666 (+/-0.012) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.0024787521766663585, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 64, 'architecture': (16, 64, 2, 32), 'activation_function': 'sigmoid'}
0.667 (+/-0.049) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.573753420737433, 'l1_weight': 0.06217652402211632, 'epochs': 10, 'batch_size': 32, 'architecture': (512, 512, 8, 1024), 'activation_function': 'relu'}
0.659 (+/-0.021) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.06217652402211632, 'epochs': 30, 'batch_size': 64, 'architecture': (512, 2, 2, 1024), 'activation_function': 'relu'}
0.674 (+/-0.044) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.573753420737433, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (1024, 4, 2, 2), 'activation_function': 'tanh'}
0.675 (+/-0.020) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 1.0, 'l1_weight': 0.006737946999085467, 'epochs': 40, 'batch_size': 16, 'architecture': (512, 32, 64, 1024), 'activation_function': 'sigmoid'}
0.663 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.32919298780790573, 'epochs': 30, 'batch_size': 16, 'architecture': (32, 32, 64, 1024), 'activation_function': 'sigmoid'}
0.671 (+/-0.019) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.573753420737433, 'l1_weight': 0.573753420737433, 'epochs': 10, 'batch_size': 128, 'architecture': (128, 32, 2, 128), 'activation_function': 'sigmoid'}
0.670 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (32, 1024, 1024, 128), 'activation_function': 'relu'}
0.628 (+/-0.036) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.006737946999085467, 'epochs': 20, 'batch_size': 128, 'architecture': (8, 64, 32, 32), 'activation_function': 'tanh'}
0.648 (+/-0.046) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.10836802322189586, 'epochs': 40, 'batch_size': 64, 'architecture': (2, 1024, 1024, 16), 'activation_function': 'sigmoid'}
0.655 (+/-0.083) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.10836802322189586, 'epochs': 40, 'batch_size': 64, 'architecture': (128, 1, 2, 512), 'activation_function': 'tanh'}
0.695 (+/-0.065) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 1.0, 'l1_weight': 0.18887560283756186, 'epochs': 20, 'batch_size': 128, 'architecture': (512, 4, 1, 4), 'activation_function': 'sigmoid'}
0.662 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.06217652402211632, 'l1_weight': 1.0, 'epochs': 50, 'batch_size': 64, 'architecture': (1024, 8, 64, 32), 'activation_function': 'relu'}
0.646 (+/-0.034) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 128, 'architecture': (1024, 8, 128, 8), 'activation_function': 'tanh'}
0.646 (+/-0.041) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 128, 'architecture': (2, 16, 64, 1), 'activation_function': 'relu'}
0.642 (+/-0.005) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.06217652402211632, 'epochs': 40, 'batch_size': 16, 'architecture': (1, 32, 512, 64), 'activation_function': 'relu'}
0.674 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.573753420737433, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 16, 'architecture': (1024, 1, 1, 4), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.649 (+/-0.067) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 40, 'batch_size': 32, 'architecture': (4, 128, 4, 64), 'activation_function': 'sigmoid'}
0.652 (+/-0.044) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.573753420737433, 'l1_weight': 0.020468075714350484, 'epochs': 30, 'batch_size': 16, 'architecture': (64, 4, 32, 1), 'activation_function': 'relu'}
0.653 (+/-0.049) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 32, 'architecture': (512, 1024, 1, 128), 'activation_function': 'relu'}
0.646 (+/-0.043) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.573753420737433, 'l1_weight': 0.01174362845702136, 'epochs': 40, 'batch_size': 64, 'architecture': (1024, 16, 64, 2), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.685 (+/-0.029) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.36787944117144233, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.06217652402211632, 'epochs': 40, 'batch_size': 128, 'architecture': (32, 4, 4, 4), 'activation_function': 'tanh'}
0.655 (+/-0.001) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 10, 'batch_size': 64, 'architecture': (64, 2, 32, 2), 'activation_function': 'relu'}
0.661 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 1.0, 'l1_weight': 0.10836802322189586, 'epochs': 10, 'batch_size': 128, 'architecture': (1, 4, 2, 1024), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.675 (+/-0.039) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.06217652402211632, 'epochs': 50, 'batch_size': 64, 'architecture': (32, 1, 128, 32), 'activation_function': 'sigmoid'}
0.650 (+/-0.017) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.10836802322189586, 'epochs': 40, 'batch_size': 16, 'architecture': (1024, 32, 4, 128), 'activation_function': 'relu'}
0.638 (+/-0.019) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.32919298780790573, 'l1_weight': 0.01174362845702136, 'epochs': 10, 'batch_size': 128, 'architecture': (32, 1, 16, 16), 'activation_function': 'tanh'}
0.677 (+/-0.032) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adam.Adam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.573753420737433, 'l1_weight': 0.006737946999085467, 'epochs': 50, 'batch_size': 32, 'architecture': (16, 1024, 16, 8), 'activation_function': 'tanh'}
0.680 (+/-0.011) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.12110333239232973, 'l2_weight': 0.01174362845702136, 'l1_weight': 0.06217652402211632, 'epochs': 50, 'batch_size': 128, 'architecture': (512, 64, 8, 8), 'activation_function': 'relu'}
0.635 (+/-0.031) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.573753420737433, 'epochs': 40, 'batch_size': 128, 'architecture': (16, 4, 16, 1), 'activation_function': 'sigmoid'}
0.667 (+/-0.009) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.06948345122280151, 'l2_weight': 0.06217652402211632, 'l1_weight': 1.0, 'epochs': 40, 'batch_size': 128, 'architecture': (64, 1, 16, 512), 'activation_function': 'tanh'}
0.646 (+/-0.048) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.06217652402211632, 'epochs': 30, 'batch_size': 32, 'architecture': (16, 8, 4, 128), 'activation_function': 'relu'}
0.653 (+/-0.033) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.039866367823724935, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.10836802322189586, 'epochs': 50, 'batch_size': 64, 'architecture': (4, 4, 1024, 4), 'activation_function': 'tanh'}
0.642 (+/-0.049) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 32, 'architecture': (32, 128, 2, 16), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.661 (+/-0.008) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.020468075714350484, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 64, 'architecture': (1024, 128, 32, 4), 'activation_function': 'tanh'}
0.668 (+/-0.075) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.nadam.Nadam'>, 'learning_rate': 0.2110720877910902, 'l2_weight': 0.03567399334725241, 'l1_weight': 0.32919298780790573, 'epochs': 50, 'batch_size': 32, 'architecture': (8, 32, 8, 1024), 'activation_function': 'relu'}
0.649 (+/-0.012) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.013123728736940956, 'l2_weight': 0.18887560283756186, 'l1_weight': 0.03567399334725241, 'epochs': 10, 'batch_size': 16, 'architecture': (512, 2, 4, 128), 'activation_function': <function leaky_relu at 0x12c81cdd0>}
0.654 (+/-0.028) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.rmsprop.RMSprop'>, 'learning_rate': 0.007529784255650023, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.32919298780790573, 'epochs': 30, 'batch_size': 32, 'architecture': (2, 16, 512, 4), 'activation_function': 'sigmoid'}
0.638 (+/-0.042) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.gradient_descent.SGD'>, 'learning_rate': 0.02287346491123891, 'l2_weight': 0.06217652402211632, 'l1_weight': 0.006737946999085467, 'epochs': 10, 'batch_size': 128, 'architecture': (4, 64, 512), 'activation_function': 'tanh'}
0.641 (+/-0.021) for {'optimizer': <class 'tensorflow.python.keras.optimizer_v2.adagrad.Adagrad'>, 'learning_rate': 0.004320239474094066, 'l2_weight': 0.10836802322189586, 'l1_weight': 0.03567399334725241, 'epochs': 10, 'batch_size': 64, 'architecture': (8, 16, 1, 64), 'activation_function': 'relu'}

Process finished with exit code 0